openapi: "3.0.0"
info:
  title: Home Automation in Rust
  version: "1.0.0"
  description: This is the public API that can be used to control the system.

paths:
  /zones:
    get:
      tags:
        - Zones
      summary: List all the zones in the system.
      responses:
        200:
          description: OK - Body contains object with list of zones.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Zones"

    post:
      tags:
        - Zones
      summary: Add a new zone to the list of zones.
      requestBody:
        description: The new zone to be added.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Zone"
      responses:
        201:
          description: CREATED - Empty response body.

  /zones/{zoneUuid}:
    get:
      tags:
        - Zones
      summary: Get the details of the specified zone.
      parameters:
        - $ref: "#/components/parameters/zoneUuidPath"
      responses:
        200:
          description: OK - Body contains Zone object.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Zone"

    patch:
      tags:
        - Zones
      summary: Update the Zone with the given UUID.
      parameters:
        - $ref: "#/components/parameters/zoneUuidPath"
      requestBody:
        description: The new zone to be added.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Zone"
      responses:
        200:
          description: OK - Body contains updated Zone object.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Zone"

    delete:
      tags:
        - Zones
      summary: Delete the Zone with the given UUID.
      parameters:
        - $ref: "#components/parameters/zoneUuidPath"
      responses:
        204:
          description: OK - No content (empty body in response).

  /devices:
    get:
      tags:
        - Devices
      summary: Get a list of all devices in the system.
      responses:
        200:
          description: OK - Body contains object with list of devices.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Devices"

  /devices?zoneUuid={zoneUuid}:
    get:
      tags:
        - Devices
      summary: Get a list of all devices in the specified zone.
      parameters:
        - $ref: "#components/parameters/zoneUuidQuery"
      responses:
        200:
          description: OK - Body contains object with list of devices in the Zone.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Devices"

components:
  parameters:
    zoneUuidPath:
      name: zoneUuid
      in: path
      description: The unique identifier of a single Zone.
      required: true
      schema:
        type: string
        format: uuid

    zoneUuidQuery:
      name: zoneUuid
      in: query
      description: The unique identifier of a single Zone.
      required: false
      schema:
        type: string
        format: uuid

  schemas:
    Zone:
      type: object
      properties:
        name:
          type: string
          description: User-friendly name for the Zone.
          uniqueItems: true
          maxLength: 24
          example: Living Room

    Zones:
      type: object
      properties:
        zones:
          type: object
          additionalProperties:
            $ref: "#components/schemas/Zone"
          example:
            "8a70d6f5-a877-4331-8f15-0f20e4d34c0f": { "name": Living Room }
            "a805847b-0df2-44b8-9a49-b3aebd8eecb2": { "name": Bedroom }

    Device:
      type: object
      properties:
        name:
          type: string
          description: User-friendly name for the Device.
          uniqueItems: true
          maxLength: 24
          example: STRV

    Devices:
      type: object
      properties:
        devices:
          type: object
          additionalProperties:
            $ref: "#components/schemas/Device"
          example:
            "56fd8e82-d260-46df-809f-662f070e9e1e": { "name": STRV }
            "4edf5992-8511-4587-a118-b8d53473da0c": { "name": Main Light }
