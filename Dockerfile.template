################################################################################
# Resin Base Image
################################################################################

FROM resin/%%RESIN_MACHINE_NAME%%-debian AS base

ENV INITSYSTEM=on
ENV DEBIAN_FRONTEND=noninteractive

################################################################################
# Rust Image
################################################################################

FROM base AS rust

# Install build tools.
RUN apt-get -q update && apt-get install -yq --no-install-recommends build-essential curl file

ENV PATH=/root/.cargo/bin:$PATH

# Install specific version of Rust.
RUN curl -0 https://sh.rustup.rs -o rustup-init
RUN chmod +x rustup-init
RUN ./rustup-init -y --no-modify-path --default-toolchain nightly-2018-09-25

################################################################################
# Dependencies
################################################################################

FROM rust AS dependencies

WORKDIR /build

# Create new, empty project.
RUN USER=root cargo new dep-project
WORKDIR /build/dep-project

# Copy Cargo files that contain the dependencies.
COPY Cargo.* .

# Build empty project with real dependencies.
RUN cargo build --release

################################################################################
# Builder
################################################################################

FROM rust AS builder

COPY . /build
WORKDIR /build

# Copy target folder with dependencies from dependencies image.
COPY --from=dependencies target .

RUN cargo build --release

################################################################################
# Project Image
################################################################################

FROM base

# Copy binary from builder image
WORKDIR /app
COPY --from=builder /build/target/release/hello-resin .

# Copy Rocket.toml settings file.
COPY Rocket.toml .

# Launch application
CMD "./hello-resin"
